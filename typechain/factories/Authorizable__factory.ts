/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Authorizable, AuthorizableInterface } from "../Authorizable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331790556102b9806100326000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806313af40351461006757806327c97fa51461007c5780638da5cb5b1461008f578063b6a5d7de146100bf578063b9181611146100d2578063fe9fbb8014610105575b600080fd5b61007a610075366004610229565b610131565b005b61007a61008a366004610229565b610186565b6000546100a2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61007a6100cd366004610229565b6101d1565b6100f56100e0366004610229565b60016020526000908152604090205460ff1681565b60405190151581526020016100b6565b6100f5610113366004610229565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b031633146101645760405162461bcd60e51b815260040161015b90610259565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101b05760405162461bcd60e51b815260040161015b90610259565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b031633146101fb5760405162461bcd60e51b815260040161015b90610259565b610226816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b60006020828403121561023b57600080fd5b81356001600160a01b038116811461025257600080fd5b9392505050565b60208082526010908201526f29b2b73232b9103737ba1037bbb732b960811b60408201526060019056fea264697066735822122070970b5333dc9409917ce5dbf68f2cea318a3c8d3a999b1044012c1ccadcebb664736f6c634300080a0033";

export class Authorizable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Authorizable> {
    return super.deploy(overrides || {}) as Promise<Authorizable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Authorizable {
    return super.attach(address) as Authorizable;
  }
  connect(signer: Signer): Authorizable__factory {
    return super.connect(signer) as Authorizable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuthorizableInterface {
    return new utils.Interface(_abi) as AuthorizableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Authorizable {
    return new Contract(address, _abi, signerOrProvider) as Authorizable;
  }
}
