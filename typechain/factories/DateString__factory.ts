/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DateString, DateStringInterface } from "../DateString";

const _abi = [
  {
    inputs: [],
    name: "OFFSET19700101",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_PER_DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_PER_HOUR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_PER_MINUTE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610d1961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c80634df861261461007157806374f0314f1461008c578063a3f144ae14610096578063bcb4f29a146100a0578063e9556430146100c2578063f40ce946146100ca575b600080fd5b61007a610e1081565b60405190815260200160405180910390f35b61007a6201518081565b61007a62253d8c81565b8180156100ac57600080fd5b506100c06100bb3660046109d0565b6100ea565b005b61007a603c81565b8180156100d657600080fd5b506100c06100e5366004610a08565b6100f8565b6100f48282610108565b5050565b610103838383610588565b505050565b806000808061012261011d6201518088610af7565b6106d9565b919450925090506000610136600a83610af7565b905084610144826030610b0b565b60f81b908080548061015590610b30565b80601f811461016357610179565b83600052602060002060ff1984168155603f9350505b506002919091019091558154600116156101a25790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b840402179055506000600a836101d39190610b6b565b9050856101e1826030610b0b565b60f81b90808054806101f290610b30565b80601f811461020057610216565b83600052602060002060ff1984168155603f9350505b5060029190910190915581546001161561023f5790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b84040217905550505081600114156102895761028484602560f91b604160f81b602760f91b61084d565b610436565b81600214156102aa5761028484602360f91b604560f81b602160f91b61084d565b81600314156102cb5761028484604d60f81b604160f81b602960f91b61084d565b81600414156102ec5761028484604160f81b600560fc1b602960f91b61084d565b816005141561030d5761028484604d60f81b604160f81b605960f81b61084d565b816006141561032e5761028484602560f91b605560f81b602760f91b61084d565b816007141561034f5761028484602560f91b605560f81b601360fa1b61084d565b81600814156103705761028484604160f81b605560f81b604760f81b61084d565b81600914156103915761028484605360f81b604560f81b600560fc1b61084d565b81600a14156103b25761028484604f60f81b604360f81b601560fa1b61084d565b81600b14156103d35761028484602760f91b604f60f81b602b60f91b61084d565b81600c14156103f45761028484601160fa1b604560f81b604360f81b61084d565b60405162461bcd60e51b81526020600482015260136024820152723230ba32903232b1b7b234b7339032b93937b960691b604482015260640160405180910390fd5b6000610443606485610b6b565b90506000610452600a83610af7565b905085610460826030610b0b565b60f81b908080548061047190610b30565b80601f811461047f57610495565b83600052602060002060ff1984168155603f9350505b506002919091019091558154600116156104be5790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b840402179055506000600a836104ef9190610b6b565b9050866104fd826030610b0b565b60f81b908080548061050e90610b30565b80601f811461051c57610532565b83600052602060002060ff1984168155603f9350505b5060029190910190915581546001161561055b5790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b84040217905550505050505050505050565b828160005b825181101561064457818382815181106105a9576105a9610b7f565b602001015160f81c60f81b90808054806105c290610b30565b80601f81146105d0576105e6565b83600052602060002060ff1984168155603f9350505b5060029190910190915581546001161561060f5790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b84040217905550808061063c90610b95565b91505061058d565b5080602d60f81b908080548061065990610b30565b80601f81146106675761067d565b83600052602060002060ff1984168155603f9350505b506002919091019091558154600116156106a65790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b840402179055506106d284846100ea565b5050505050565b60008080838162253d8c6106f08362010bd9610bb0565b6106fa9190610bb0565b9050600062023ab161070d836004610bf1565b6107179190610c76565b905060046107288262023ab1610bf1565b610733906003610bb0565b61073d9190610c76565b6107479083610ca4565b9150600062164b0961075a846001610bb0565b61076690610fa0610bf1565b6107709190610c76565b90506004610780826105b5610bf1565b61078a9190610c76565b6107949084610ca4565b61079f90601f610bb0565b9250600061098f6107b1856050610bf1565b6107bb9190610c76565b9050600060506107cd8361098f610bf1565b6107d79190610c76565b6107e19086610ca4565b90506107ee600b83610c76565b94506107fb85600c610bf1565b610806836002610bb0565b6108109190610ca4565b9150848361081f603187610ca4565b61082a906064610bf1565b6108349190610bb0565b61083e9190610bb0565b9a919950975095505050505050565b8383908080548061085d90610b30565b80601f811461086b57610881565b83600052602060002060ff1984168155603f9350505b506002919091019091558154600116156108aa5790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b84040217905550838290808054806108dc90610b30565b80601f81146108ea57610900565b83600052602060002060ff1984168155603f9350505b506002919091019091558154600116156109295790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b840402179055508381908080548061095b90610b30565b80601f81146109695761097f565b83600052602060002060ff1984168155603f9350505b506002919091019091558154600116156109a85790600052602060002090602091828204019190065b909190919091601f036101000a81548160ff02191690600160f81b8404021790555050505050565b600080604083850312156109e357600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610a1d57600080fd5b83356001600160401b0380821115610a3457600080fd5b818601915086601f830112610a4857600080fd5b813581811115610a5a57610a5a6109f2565b604051601f8201601f19908116603f01168101908382118183101715610a8257610a826109f2565b81604052828152896020848701011115610a9b57600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082610b0657610b06610acb565b500490565b600060ff821660ff84168060ff03821115610b2857610b28610ae1565b019392505050565b600181811c90821680610b4457607f821691505b60208210811415610b6557634e487b7160e01b600052602260045260246000fd5b50919050565b600082610b7a57610b7a610acb565b500690565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ba957610ba9610ae1565b5060010190565b600080821280156001600160ff1b0384900385131615610bd257610bd2610ae1565b600160ff1b8390038412811615610beb57610beb610ae1565b50500190565b60006001600160ff1b0381841382841380821686840486111615610c1757610c17610ae1565b600160ff1b6000871282811687830589121615610c3657610c36610ae1565b60008712925087820587128484161615610c5257610c52610ae1565b87850587128184161615610c6857610c68610ae1565b505050929093029392505050565b600082610c8557610c85610acb565b600160ff1b821460001984141615610c9f57610c9f610ae1565b500590565b60008083128015600160ff1b850184121615610cc257610cc2610ae1565b6001600160ff1b0384018313811615610cdd57610cdd610ae1565b5050039056fea26469706673582212204b0a45613a705f5af81253f4097883e50ba020a74fb29129d1261cd0486ca50664736f6c634300080a0033";

export class DateString__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DateString> {
    return super.deploy(overrides || {}) as Promise<DateString>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DateString {
    return super.attach(address) as DateString;
  }
  connect(signer: Signer): DateString__factory {
    return super.connect(signer) as DateString__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DateStringInterface {
    return new utils.Interface(_abi) as DateStringInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DateString {
    return new Contract(address, _abi, signerOrProvider) as DateString;
  }
}
