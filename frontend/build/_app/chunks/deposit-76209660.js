import{B as m,C as n,a as s,e as l}from"./token-bcf05b84.js";import{c as r}from"./positions-2c4c6913.js";import{I as c}from"./index-2a5056e0.js";function o(t,a){return new m(t).multipliedBy(10**a).toFixed(0)}async function f(t,a){console.log("Amount",t),console.log("Strike",a);const e=new n(r.NftOptionBuyersVault,s.nftOptionBuyerVault,c(l));let i=await e.estimateGas.depositInOptionBuyersVault(o(t,18),o(a,18));i=i.mul(3).div(2),console.log("Gaslimit",i);const u=await e.depositInOptionBuyersVault(o(t,18),o(a,18),{gasLimit:i});return console.log("TX",u),u}async function d(t){const a=new n(r.NftOptionSellersVault,s.nftOptionSellerVault,c(l));let e=await a.estimateGas.depositWethForStrikeToReclaimNFT(t);return a.depositWethForStrikeToReclaimNFT(t,{gasLimit:e})}async function S(){const t=new n(r.NftOptionSellersVault,s.nftOptionSellerVault,c(l));let a=await t.estimateGas.withdrawAllClaimableNFTs();return await t.withdrawAllClaimableNFTs({gasLimit:a})}async function y(t){console.log("Strike",t);const a=new n(r.NftOptionBuyersVault,s.nftOptionBuyerVault,c(l)),e=await a.estimateGas.claimEarningsForStrike(t);return await a.claimEarningsForStrike(t,{gasLimit:e})}export{d as a,y as c,f as d,o as g,S as w};
